# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build with Maven
      run: mvn -B package --file pom.xml
      
    - name: Upload Maven build artifact
      uses: actions/upload-artifact@v1
      with:
        name: artifact
        path: target/SpringBootDocker-0.0.1-SNAPSHOT.jar  
          
  deploy: 
    runs-on: ubuntu-latest  
    needs: build 
    name: Build Docker container and deploy to Kubernetes
    steps:
    - uses: actions/checkout@v1
    - name: Download Maven build artifact
      uses: actions/download-artifact@v1
      with:
        name: artifact
    - name: Build Docker container
      run: |
        mkdir -p springboot-docker/target
        mv artifact/SpringBootDocker-0.0.1-SNAPSHOT.jar springboot-docker/target
        docker build -t registry.digitalocean.com/kube-cont-reg/springboot-docker:latest .

    - name: Push Docker images
      run: echo "Pushing Docker image to Container Registry (e.g. ECR)"
    - name: Deploy application
      run: echo "Deploying application (e.g. Kubernetes)"
      
    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with: 
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
        
    - name: Log in to DigitalOcean Container Registry with short-lived credentials
      run: doctl registry login --expiry-seconds 600

    - name: Push image to DigitalOcean Container Registry
      run: docker push registry.digitalocean.com/kube-cont-reg/springboot-docker:latest
